{"version":3,"file":"app/opengraph-image/route.js","mappings":"qFAAA,4DCAA,oHIAA,wTHEO,IAAMA,EAAU,OAAO,eAEAC,IAC5B,OAAO,MAAMC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,EAC7B,CCFA,OAAsB,GAAG,CAAQ,EAEjC,YACA,0BAGA,wBACA,uIAMO,0BAKP,EAJA,qBACA,CAAU,wBAA2B,MACrC,aAIA,MACA,eAAwD,SAAoB,EAS5E,SARA,aAMA,kBAXA,IAYK,IAEL,WAAiB,IAAY,cAC7B,UACA,CAAO,CAEP,CAEA,UAAmB,cAAwB,CAC3C,CCnCA,UAAwB,qBAAmB,EAC3C,YACA,KAAc,GAAS,WACvB,8BACA,4BACA,2BACA,sCACA,CAAK,CACL,6MACA,iBAVA,GAWA,QAAY,EACZ,CAAC,EAID,kBAAQ,wCAAsD,EAC9D,aACA,MAAW,QAAW,EACtB,mBACA,sBACA,CAAK,CACL,CCpBA,uEACA,EAFA,4BAEA,4BACA,MACI,QAA8B,EAClC,8BACA,0BACA,wBACA,gBAAyB,OAAqB,EAC9C,uBACA,CAAS,CACT,CAAK,EAEE,MAAqB,EAC5B,EAAe,GAAsB,MAAM,EAAkB,CAC7D,QAD6D,GAf7D,CAAoB,MAAQ,iBAcM,IAdN,CAA0B,sBAA2B,aAAe,kDAAyD,uOAAsQ,wSAAoU,kBAAkB,QAAQ,uDAA2D,mEAAyE,iBAAsB,gBAAkB,sEAAgF,kBAAoB,uCAA6C,MAAQ,iBAAmB,2BAA+B,gHAAkI,uBAAyB,8FAA0G,aAAiB,WAAa,sEAA6E,uBAAuB,iCAAmC,QAAQ,EAAE,SAAW,oBAAsB,QAAQ,GAAG,sGAA0G,WAAa,SAAW,2CAAiD,UAAY,+BAAqC,UAAY,oCAA0C,QAAU,uCAA6C,OAAS,yCAA+C,QAAU,0CAAiD,MAAQ,+CAAsD,iBAAmB,ouBAAi3B,sEAAwE,gMAA8O,qBAAyB,k+CAAs/C,8JAiB/xJ,CAAC,CAAC,EAAC,+ECrBY,SAASC,EAASC,CAAkC,EACjE,MACE,WAACC,MAAAA,CACCC,MAAM,6BACNC,aAAY,GAAGC,QAAQC,GAAG,CAACC,SAAS,CAAC,KAAK,CAAC,CAC3CC,QAAQ,YACP,GAAGP,CAAK,CACTQ,UAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAIA,CAAC,qCAAsCT,EAAMQ,SAAS,YAErE,UAACE,OAAAA,CAAKC,EAAE,wDACR,UAACD,OAAAA,CAAKC,EAAE,sDAGd,CCRe,eAAeb,EAAeE,CAAa,EACxD,GAAM,OAAEY,CAAK,CAAE,CAAG,CAEdA,MAAOR,QAAQC,GAAG,CAACC,SAAS,CAE9B,GAAGN,CAAK,EAGV,OAAO,IAAIa,EAAAA,CAAaA,CAEpB,WAACC,MAAAA,CAAIC,GAAG,6EACN,UAACD,MAAAA,CAAIC,GAAG,gHACN,UAAChB,EAAQA,CAACiB,KAADjB,CAAO,KAAKkB,OAAO,KAAKC,KAAK,YAExC,UAACC,IAAAA,CAAEJ,GAAG,+CAAuCH,OAGjD,CACEI,MAAO,KACPC,OAAQ,IACRG,MAAO,CACL,CACEC,KAAM,QACNC,KAAM,MAAMC,MAAM,gBAAmD,EAAEC,IAAI,CAAC,GAC1EC,EAAIC,WAAW,IAEjBC,MAAO,SACPC,OAAQ,GACV,EACD,EAGP,YCvCA","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/opengraph-image.tsx","webpack://_N_E/","webpack://_N_E/./app/opengraph-image.tsx?d322","webpack://_N_E/?b4c8","webpack://_N_E/./components/icons/logo.tsx","webpack://_N_E/./components/opengraph-image.tsx","webpack://_N_E/./fonts/Inter-Bold.ttf"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import OpengraphImage from 'components/opengraph-image';\r\n\r\nexport const runtime = 'edge';\r\n\r\nexport default async function Image() {\r\n  return await OpengraphImage();\r\n}\r\n","/* dynamic image route */\nimport { NextResponse } from 'next/server'\nimport * as userland from \"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\\\\app\\\\opengraph-image.tsx\"\n\nconst imageModule = { ...userland }\n\nconst handler = imageModule.default\nconst generateImageMetadata = imageModule.generateImageMetadata\n\n\n  if (typeof handler !== 'function') {\n    throw new Error('Default export is missing in \"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\\\\app\\\\opengraph-image.tsx\"')\n  }\n  \nexport { runtime } from \"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\\\\app\\\\opengraph-image.tsx\"\n\n\nexport async function GET(_, ctx) {\n  const params = await ctx.params\n  const { __metadata_id__, ...rest } = params || {}\n  const restParams = params ? rest : undefined\n  const targetId = __metadata_id__\n  let id = undefined\n  \n  if (generateImageMetadata) {\n    const imageMetadata = await generateImageMetadata({ params: restParams })\n    id = imageMetadata.find((item) => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (item?.id == null) {\n          throw new Error('id property is required for every item returned from generateImageMetadata')\n        }\n      }\n      return item.id.toString() === targetId\n    })?.id\n    if (id == null) {\n      return new NextResponse('Not Found', {\n        status: 404,\n      })\n    }\n  }\n\n  return handler({ params: restParams, id })\n}\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"next-metadata-route-loader?filePath=C%3A%5CUsers%5CPinda%5COneDrive%5CDesktop%5Cpurple-pen-site%5Ccommerce%5Capp%5Copengraph-image.tsx&isDynamicRouteExtension=1!?__next_metadata_route__\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/opengraph-image/route\",\n        pathname: \"/opengraph-image\",\n        filename: \"opengraph-image\",\n        bundlePath: \"app/opengraph-image/route\"\n    },\n    resolvedPagePath: \"next-metadata-route-loader?filePath=C%3A%5CUsers%5CPinda%5COneDrive%5CDesktop%5Cpurple-pen-site%5Ccommerce%5Capp%5Copengraph-image.tsx&isDynamicRouteExtension=1!?__next_metadata_route__\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fopengraph-image%2Froute&page=%2Fopengraph-image%2Froute&pagePath=private-next-app-dir%2Fopengraph-image.tsx&appDir=C%3A%5CUsers%5CPinda%5COneDrive%5CDesktop%5Cpurple-pen-site%5Ccommerce%5Capp&appPaths=%2Fopengraph-image&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&flyingShuttle=false&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/opengraph-image.tsx?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":false},\"typescript\":{\"ignoreBuildErrors\":false,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.ts\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/avif\",\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[{\"protocol\":\"https\",\"hostname\":\"cdn.shopify.com\",\"pathname\":\"/s/files/**\"}],\"unoptimized\":false},\"devIndicators\":{\"appIsrStatus\":true,\"buildActivity\":true,\"buildActivityPosition\":\"bottom-right\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\",\"experimental\":{\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":15,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"turbo\":{\"root\":\"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\"},\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"reactOwnerStack\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"after\":false,\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"bundlePagesRouterDependencies\":false,\"configFile\":\"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\\\\next.config.ts\",\"configFileName\":\"next.config.ts\"}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/opengraph-image/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/opengraph-image/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map","import clsx from 'clsx';\r\n\r\nexport default function LogoIcon(props: React.ComponentProps<'svg'>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-label={`${process.env.SITE_NAME} logo`}\r\n      viewBox=\"0 0 32 28\"\r\n      {...props}\r\n      className={clsx('h-4 w-4 fill-black dark:fill-white', props.className)}\r\n    >\r\n      <path d=\"M21.5758 9.75769L16 0L0 28H11.6255L21.5758 9.75769Z\" />\r\n      <path d=\"M26.2381 17.9167L20.7382 28H32L26.2381 17.9167Z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import { ImageResponse } from 'next/og';\r\nimport LogoIcon from './icons/logo';\r\n\r\nexport type Props = {\r\n  title?: string;\r\n};\r\n\r\nexport default async function OpengraphImage(props?: Props): Promise<ImageResponse> {\r\n  const { title } = {\r\n    ...{\r\n      title: process.env.SITE_NAME\r\n    },\r\n    ...props\r\n  };\r\n\r\n  return new ImageResponse(\r\n    (\r\n      <div tw=\"flex h-full w-full flex-col items-center justify-center bg-black\">\r\n        <div tw=\"flex flex-none items-center justify-center border border-neutral-700 h-[160px] w-[160px] rounded-3xl\">\r\n          <LogoIcon width=\"64\" height=\"58\" fill=\"white\" />\r\n        </div>\r\n        <p tw=\"mt-12 text-6xl font-bold text-white\">{title}</p>\r\n      </div>\r\n    ),\r\n    {\r\n      width: 1200,\r\n      height: 630,\r\n      fonts: [\r\n        {\r\n          name: 'Inter',\r\n          data: await fetch(new URL('../fonts/Inter-Bold.ttf', import.meta.url)).then((res) =>\r\n            res.arrayBuffer()\r\n          ),\r\n          style: 'normal',\r\n          weight: 700\r\n        }\r\n      ]\r\n    }\r\n  );\r\n}\r\n","module.exports = \"blob:Inter-Bold.1e3e4a3108c86bc3.ttf\""],"names":["runtime","Image","OpengraphImage","LogoIcon","props","svg","xmlns","aria-label","process","env","SITE_NAME","viewBox","className","clsx","path","d","title","ImageResponse","div","tw","width","height","fill","p","fonts","name","data","fetch","then","res","arrayBuffer","style","weight"],"sourceRoot":"","ignoreList":[]}