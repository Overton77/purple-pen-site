{"version":3,"file":"app/[page]/opengraph-image/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/[page]/opengraph-image.tsx","webpack://_N_E/?b6ad","webpack://_N_E/./app/[page]/opengraph-image.tsx?33bf","webpack://_N_E/?d738","webpack://_N_E/./components/icons/logo.tsx","webpack://_N_E/./components/opengraph-image.tsx","webpack://_N_E/./lib/constants.ts","webpack://_N_E/./lib/type-guards.ts","webpack://_N_E/./lib/utils.ts","webpack://_N_E/./lib/shopify/fragments/seo.ts","webpack://_N_E/./lib/shopify/queries/collection.ts","webpack://_N_E/./lib/shopify/queries/page.ts","webpack://_N_E/./lib/shopify/index.ts","webpack://_N_E/./fonts/Inter-Bold.ttf"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import OpengraphImage from 'components/opengraph-image';\r\nimport { getPage } from 'lib/shopify';\r\n\r\nexport const runtime = 'edge';\r\n\r\nexport default async function Image({ params }: { params: { page: string } }) {\r\n  const page = await getPage(params.page);\r\n  const title = page.seo?.title || page.title;\r\n\r\n  return await OpengraphImage({ title });\r\n}\r\n","/* dynamic image route */\nimport { NextResponse } from 'next/server'\nimport * as userland from \"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\\\\app\\\\[page]\\\\opengraph-image.tsx\"\n\nconst imageModule = { ...userland }\n\nconst handler = imageModule.default\nconst generateImageMetadata = imageModule.generateImageMetadata\n\n\n  if (typeof handler !== 'function') {\n    throw new Error('Default export is missing in \"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\\\\app\\\\[page]\\\\opengraph-image.tsx\"')\n  }\n  \nexport { runtime } from \"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\\\\app\\\\[page]\\\\opengraph-image.tsx\"\n\n\nexport async function GET(_, ctx) {\n  const params = await ctx.params\n  const { __metadata_id__, ...rest } = params || {}\n  const restParams = params ? rest : undefined\n  const targetId = __metadata_id__\n  let id = undefined\n  \n  if (generateImageMetadata) {\n    const imageMetadata = await generateImageMetadata({ params: restParams })\n    id = imageMetadata.find((item) => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (item?.id == null) {\n          throw new Error('id property is required for every item returned from generateImageMetadata')\n        }\n      }\n      return item.id.toString() === targetId\n    })?.id\n    if (id == null) {\n      return new NextResponse('Not Found', {\n        status: 404,\n      })\n    }\n  }\n\n  return handler({ params: restParams, id })\n}\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"next-metadata-route-loader?filePath=C%3A%5CUsers%5CPinda%5COneDrive%5CDesktop%5Cpurple-pen-site%5Ccommerce%5Capp%5C%5Bpage%5D%5Copengraph-image.tsx&isDynamicRouteExtension=1!?__next_metadata_route__\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/[page]/opengraph-image/route\",\n        pathname: \"/[page]/opengraph-image\",\n        filename: \"opengraph-image\",\n        bundlePath: \"app/[page]/opengraph-image/route\"\n    },\n    resolvedPagePath: \"next-metadata-route-loader?filePath=C%3A%5CUsers%5CPinda%5COneDrive%5CDesktop%5Cpurple-pen-site%5Ccommerce%5Capp%5C%5Bpage%5D%5Copengraph-image.tsx&isDynamicRouteExtension=1!?__next_metadata_route__\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2F%5Bpage%5D%2Fopengraph-image%2Froute&page=%2F%5Bpage%5D%2Fopengraph-image%2Froute&pagePath=private-next-app-dir%2F%5Bpage%5D%2Fopengraph-image.tsx&appDir=C%3A%5CUsers%5CPinda%5COneDrive%5CDesktop%5Cpurple-pen-site%5Ccommerce%5Capp&appPaths=%2F%5Bpage%5D%2Fopengraph-image&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&flyingShuttle=false&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/[page]/opengraph-image.tsx?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":false},\"typescript\":{\"ignoreBuildErrors\":false,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.ts\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/avif\",\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[{\"protocol\":\"https\",\"hostname\":\"cdn.shopify.com\",\"pathname\":\"/s/files/**\"}],\"unoptimized\":false},\"devIndicators\":{\"appIsrStatus\":true,\"buildActivity\":true,\"buildActivityPosition\":\"bottom-right\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\",\"experimental\":{\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":15,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"turbo\":{\"root\":\"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\"},\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"reactOwnerStack\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"after\":false,\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"bundlePagesRouterDependencies\":false,\"configFile\":\"C:\\\\Users\\\\Pinda\\\\OneDrive\\\\Desktop\\\\purple-pen-site\\\\commerce\\\\next.config.ts\",\"configFileName\":\"next.config.ts\"}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/[page]/opengraph-image/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/[page]/opengraph-image/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map","import clsx from 'clsx';\r\n\r\nexport default function LogoIcon(props: React.ComponentProps<'svg'>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-label={`${process.env.SITE_NAME} logo`}\r\n      viewBox=\"0 0 32 28\"\r\n      {...props}\r\n      className={clsx('h-4 w-4 fill-black dark:fill-white', props.className)}\r\n    >\r\n      <path d=\"M21.5758 9.75769L16 0L0 28H11.6255L21.5758 9.75769Z\" />\r\n      <path d=\"M26.2381 17.9167L20.7382 28H32L26.2381 17.9167Z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import { ImageResponse } from 'next/og';\r\nimport LogoIcon from './icons/logo';\r\n\r\nexport type Props = {\r\n  title?: string;\r\n};\r\n\r\nexport default async function OpengraphImage(props?: Props): Promise<ImageResponse> {\r\n  const { title } = {\r\n    ...{\r\n      title: process.env.SITE_NAME\r\n    },\r\n    ...props\r\n  };\r\n\r\n  return new ImageResponse(\r\n    (\r\n      <div tw=\"flex h-full w-full flex-col items-center justify-center bg-black\">\r\n        <div tw=\"flex flex-none items-center justify-center border border-neutral-700 h-[160px] w-[160px] rounded-3xl\">\r\n          <LogoIcon width=\"64\" height=\"58\" fill=\"white\" />\r\n        </div>\r\n        <p tw=\"mt-12 text-6xl font-bold text-white\">{title}</p>\r\n      </div>\r\n    ),\r\n    {\r\n      width: 1200,\r\n      height: 630,\r\n      fonts: [\r\n        {\r\n          name: 'Inter',\r\n          data: await fetch(new URL('../fonts/Inter-Bold.ttf', import.meta.url)).then((res) =>\r\n            res.arrayBuffer()\r\n          ),\r\n          style: 'normal',\r\n          weight: 700\r\n        }\r\n      ]\r\n    }\r\n  );\r\n}\r\n","export type SortFilterItem = {\r\n  title: string;\r\n  slug: string | null;\r\n  sortKey: 'RELEVANCE' | 'BEST_SELLING' | 'CREATED_AT' | 'PRICE';\r\n  reverse: boolean;\r\n};\r\n\r\nexport const defaultSort: SortFilterItem = {\r\n  title: 'Relevance',\r\n  slug: null,\r\n  sortKey: 'RELEVANCE',\r\n  reverse: false\r\n};\r\n\r\nexport const sorting: SortFilterItem[] = [\r\n  defaultSort,\r\n  { title: 'Trending', slug: 'trending-desc', sortKey: 'BEST_SELLING', reverse: false }, // asc\r\n  { title: 'Latest arrivals', slug: 'latest-desc', sortKey: 'CREATED_AT', reverse: true },\r\n  { title: 'Price: Low to high', slug: 'price-asc', sortKey: 'PRICE', reverse: false }, // asc\r\n  { title: 'Price: High to low', slug: 'price-desc', sortKey: 'PRICE', reverse: true }\r\n];\r\n\r\nexport const TAGS = {\r\n  collections: 'collections',\r\n  products: 'products',\r\n  cart: 'cart'\r\n};\r\n\r\nexport const HIDDEN_PRODUCT_TAG = 'nextjs-frontend-hidden';\r\nexport const DEFAULT_OPTION = 'Default Title';\r\nexport const SHOPIFY_GRAPHQL_API_ENDPOINT = '/api/2023-01/graphql.json';\r\n","export interface ShopifyErrorLike {\r\n  status: number;\r\n  message: Error;\r\n  cause?: Error;\r\n}\r\n\r\nexport const isObject = (object: unknown): object is Record<string, unknown> => {\r\n  return typeof object === 'object' && object !== null && !Array.isArray(object);\r\n};\r\n\r\nexport const isShopifyError = (error: unknown): error is ShopifyErrorLike => {\r\n  if (!isObject(error)) return false;\r\n\r\n  if (error instanceof Error) return true;\r\n\r\n  return findError(error);\r\n};\r\n\r\nfunction findError<T extends object>(error: T): boolean {\r\n  if (Object.prototype.toString.call(error) === '[object Error]') {\r\n    return true;\r\n  }\r\n\r\n  const prototype = Object.getPrototypeOf(error) as T | null;\r\n\r\n  return prototype === null ? false : findError(prototype);\r\n}\r\n","import { ReadonlyURLSearchParams } from 'next/navigation'; \n\n\nimport { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n\nexport const createUrl = (pathname: string, params: URLSearchParams | ReadonlyURLSearchParams) => {\n  const paramsString = params.toString();\n  const queryString = `${paramsString.length ? '?' : ''}${paramsString}`;\n\n  return `${pathname}${queryString}`;\n};\n\nexport const ensureStartsWith = (stringToCheck: string, startsWith: string) =>\n  stringToCheck.startsWith(startsWith) ? stringToCheck : `${startsWith}${stringToCheck}`;\n\nexport const validateEnvironmentVariables = () => {\n  const requiredEnvironmentVariables = ['SHOPIFY_STORE_DOMAIN', 'SHOPIFY_STOREFRONT_ACCESS_TOKEN'];\n  const missingEnvironmentVariables = [] as string[];\n\n  requiredEnvironmentVariables.forEach((envVar) => {\n    if (!process.env[envVar]) {\n      missingEnvironmentVariables.push(envVar);\n    }\n  });\n\n  if (missingEnvironmentVariables.length) {\n    throw new Error(\n      `The following environment variables are missing. Your site will not work without them. Read more: https://vercel.com/docs/integrations/shopify#configure-environment-variables\\n\\n${missingEnvironmentVariables.join(\n        '\\n'\n      )}\\n`\n    );\n  }\n\n  if (\n    process.env.SHOPIFY_STORE_DOMAIN?.includes('[') ||\n    process.env.SHOPIFY_STORE_DOMAIN?.includes(']')\n  ) {\n    throw new Error(\n      'Your `SHOPIFY_STORE_DOMAIN` environment variable includes brackets (ie. `[` and / or `]`). Your site will not work with them there. Please remove them.'\n    );\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const seoFragment = /* GraphQL */ `\r\n  fragment seo on SEO {\r\n    description\r\n    title\r\n  }\r\n`;\r\n\r\nexport default seoFragment;\r\n","import productFragment from '../fragments/product';\r\nimport seoFragment from '../fragments/seo';\r\n\r\nconst collectionFragment = /* GraphQL */ `\r\n  fragment collection on Collection {\r\n    handle\r\n    title\r\n    description\r\n    seo {\r\n      ...seo\r\n    }\r\n    updatedAt\r\n  }\r\n  ${seoFragment}\r\n`;\r\n\r\nexport const getCollectionQuery = /* GraphQL */ `\r\n  query getCollection($handle: String!) {\r\n    collection(handle: $handle) {\r\n      ...collection\r\n    }\r\n  }\r\n  ${collectionFragment}\r\n`;\r\n\r\nexport const getCollectionsQuery = /* GraphQL */ `\r\n  query getCollections {\r\n    collections(first: 100, sortKey: TITLE) {\r\n      edges {\r\n        node {\r\n          ...collection\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${collectionFragment}\r\n`;\r\n\r\nexport const getCollectionProductsQuery = /* GraphQL */ `\r\n  query getCollectionProducts(\r\n    $handle: String!\r\n    $sortKey: ProductCollectionSortKeys\r\n    $reverse: Boolean\r\n  ) {\r\n    collection(handle: $handle) {\r\n      products(sortKey: $sortKey, reverse: $reverse, first: 100) {\r\n        edges {\r\n          node {\r\n            ...product\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${productFragment}\r\n`;\r\n","import seoFragment from '../fragments/seo';\r\n\r\nconst pageFragment = /* GraphQL */ `\r\n  fragment page on Page {\r\n    ... on Page {\r\n      id\r\n      title\r\n      handle\r\n      body\r\n      bodySummary\r\n      seo {\r\n        ...seo\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n  ${seoFragment}\r\n`;\r\n\r\nexport const getPageQuery = /* GraphQL */ `\r\n  query getPage($handle: String!) {\r\n    pageByHandle(handle: $handle) {\r\n      ...page\r\n    }\r\n  }\r\n  ${pageFragment}\r\n`;\r\n\r\nexport const getPagesQuery = /* GraphQL */ `\r\n  query getPages {\r\n    pages(first: 100) {\r\n      edges {\r\n        node {\r\n          ...page\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${pageFragment}\r\n`;\r\n","import { HIDDEN_PRODUCT_TAG, SHOPIFY_GRAPHQL_API_ENDPOINT, TAGS } from 'lib/constants';\r\nimport { isShopifyError } from 'lib/type-guards';\r\nimport { ensureStartsWith } from 'lib/utils';\r\nimport { revalidateTag } from 'next/cache';\r\nimport { headers } from 'next/headers';\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport {\r\n  addToCartMutation,\r\n  createCartMutation,\r\n  editCartItemsMutation,\r\n  removeFromCartMutation\r\n} from './mutations/cart';\r\nimport { getCartQuery } from './queries/cart';\r\nimport {\r\n  getCollectionProductsQuery,\r\n  getCollectionQuery,\r\n  getCollectionsQuery\r\n} from './queries/collection';\r\nimport { getMenuQuery } from './queries/menu';\r\nimport { getPageQuery, getPagesQuery } from './queries/page';\r\nimport {\r\n  getProductQuery,\r\n  getProductRecommendationsQuery,\r\n  getProductsQuery\r\n} from './queries/product';\r\nimport {\r\n  Cart,\r\n  Collection,\r\n  Connection,\r\n  Image,\r\n  Menu,\r\n  Page,\r\n  Product,\r\n  ShopifyAddToCartOperation,\r\n  ShopifyCart,\r\n  ShopifyCartOperation,\r\n  ShopifyCollection,\r\n  ShopifyCollectionOperation,\r\n  ShopifyCollectionProductsOperation,\r\n  ShopifyCollectionsOperation,\r\n  ShopifyCreateCartOperation,\r\n  ShopifyMenuOperation,\r\n  ShopifyPageOperation,\r\n  ShopifyPagesOperation,\r\n  ShopifyProduct,\r\n  ShopifyProductOperation,\r\n  ShopifyProductRecommendationsOperation,\r\n  ShopifyProductsOperation,\r\n  ShopifyRemoveFromCartOperation,\r\n  ShopifyUpdateCartOperation\r\n} from './types'; \r\n\r\n\r\n\r\nconst domain = process.env.SHOPIFY_STORE_DOMAIN\r\n  ? ensureStartsWith(process.env.SHOPIFY_STORE_DOMAIN, 'https://')\r\n  : '';\r\nconst endpoint = `${domain}${SHOPIFY_GRAPHQL_API_ENDPOINT}`;\r\nconst key = process.env.SHOPIFY_STOREFRONT_ACCESS_TOKEN!;\r\n\r\ntype ExtractVariables<T> = T extends { variables: object } ? T['variables'] : never;\r\n\r\nexport async function shopifyFetch<T>({\r\n  cache = 'force-cache',\r\n  headers,\r\n  query,\r\n  tags,\r\n  variables\r\n}: {\r\n  cache?: RequestCache;\r\n  headers?: HeadersInit;\r\n  query: string;\r\n  tags?: string[];\r\n  variables?: ExtractVariables<T>;\r\n}): Promise<{ status: number; body: T } | never> {\r\n  try {\r\n    const result = await fetch(endpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Shopify-Storefront-Access-Token': key,\r\n        ...headers\r\n      },\r\n      body: JSON.stringify({\r\n        ...(query && { query }),\r\n        ...(variables && { variables })\r\n      }),\r\n      cache,\r\n      ...(tags && { next: { tags } })\r\n    });\r\n\r\n    const body = await result.json();\r\n\r\n    if (body.errors) {\r\n      throw body.errors[0];\r\n    }\r\n\r\n    return {\r\n      status: result.status,\r\n      body\r\n    };\r\n  } catch (e) {\r\n    if (isShopifyError(e)) {\r\n      throw {\r\n        cause: e.cause?.toString() || 'unknown',\r\n        status: e.status || 500,\r\n        message: e.message,\r\n        query\r\n      };\r\n    }\r\n\r\n    throw {\r\n      error: e,\r\n      query\r\n    };\r\n  }\r\n}\r\n\r\nconst removeEdgesAndNodes = <T>(array: Connection<T>): T[] => {\r\n  return array.edges.map((edge) => edge?.node);\r\n};\r\n\r\nconst reshapeCart = (cart: ShopifyCart): Cart => {\r\n  if (!cart.cost?.totalTaxAmount) {\r\n    cart.cost.totalTaxAmount = {\r\n      amount: '0.0',\r\n      currencyCode: cart.cost.totalAmount.currencyCode\r\n    };\r\n  }\r\n\r\n  return {\r\n    ...cart,\r\n    lines: removeEdgesAndNodes(cart.lines)\r\n  };\r\n};\r\n\r\nconst reshapeCollection = (collection: ShopifyCollection): Collection | undefined => {\r\n  if (!collection) {\r\n    return undefined;\r\n  }\r\n\r\n  return {\r\n    ...collection,\r\n    path: `/search/${collection.handle}`\r\n  };\r\n};\r\n\r\nconst reshapeCollections = (collections: ShopifyCollection[]) => {\r\n  const reshapedCollections = [];\r\n\r\n  for (const collection of collections) {\r\n    if (collection) {\r\n      const reshapedCollection = reshapeCollection(collection);\r\n\r\n      if (reshapedCollection) {\r\n        reshapedCollections.push(reshapedCollection);\r\n      }\r\n    }\r\n  }\r\n\r\n  return reshapedCollections;\r\n};\r\n\r\nconst reshapeImages = (images: Connection<Image>, productTitle: string) => {\r\n  const flattened = removeEdgesAndNodes(images);\r\n\r\n  return flattened.map((image) => {\r\n    const filename = image.url.match(/.*\\/(.*)\\..*/)?.[1];\r\n    return {\r\n      ...image,\r\n      altText: image.altText || `${productTitle} - ${filename}`\r\n    };\r\n  });\r\n};\r\n\r\nconst reshapeProduct = (product: ShopifyProduct, filterHiddenProducts: boolean = true) => {\r\n  if (!product || (filterHiddenProducts && product.tags.includes(HIDDEN_PRODUCT_TAG))) {\r\n    return undefined;\r\n  }\r\n\r\n  const { images, variants, ...rest } = product;\r\n\r\n  return {\r\n    ...rest,\r\n    images: reshapeImages(images, product.title),\r\n    variants: removeEdgesAndNodes(variants)\r\n  };\r\n};\r\n\r\nconst reshapeProducts = (products: ShopifyProduct[]) => {\r\n  const reshapedProducts = [];\r\n\r\n  for (const product of products) {\r\n    if (product) {\r\n      const reshapedProduct = reshapeProduct(product);\r\n\r\n      if (reshapedProduct) {\r\n        reshapedProducts.push(reshapedProduct);\r\n      }\r\n    }\r\n  }\r\n\r\n  return reshapedProducts;\r\n};\r\n\r\nexport async function createCart(): Promise<Cart> {\r\n  const res = await shopifyFetch<ShopifyCreateCartOperation>({\r\n    query: createCartMutation,\r\n    cache: 'no-store'\r\n  });\r\n\r\n  return reshapeCart(res.body.data.cartCreate.cart);\r\n}\r\n\r\nexport async function addToCart(\r\n  cartId: string,\r\n  lines: { merchandiseId: string; quantity: number }[]\r\n): Promise<Cart> {\r\n  const res = await shopifyFetch<ShopifyAddToCartOperation>({\r\n    query: addToCartMutation,\r\n    variables: {\r\n      cartId,\r\n      lines\r\n    },\r\n    cache: 'no-store'\r\n  });\r\n  return reshapeCart(res.body.data.cartLinesAdd.cart);\r\n}\r\n\r\nexport async function removeFromCart(cartId: string, lineIds: string[]): Promise<Cart> {\r\n  const res = await shopifyFetch<ShopifyRemoveFromCartOperation>({\r\n    query: removeFromCartMutation,\r\n    variables: {\r\n      cartId,\r\n      lineIds\r\n    },\r\n    cache: 'no-store'\r\n  });\r\n\r\n  return reshapeCart(res.body.data.cartLinesRemove.cart);\r\n}\r\n\r\nexport async function updateCart(\r\n  cartId: string,\r\n  lines: { id: string; merchandiseId: string; quantity: number }[]\r\n): Promise<Cart> {\r\n  const res = await shopifyFetch<ShopifyUpdateCartOperation>({\r\n    query: editCartItemsMutation,\r\n    variables: {\r\n      cartId,\r\n      lines\r\n    },\r\n    cache: 'no-store'\r\n  });\r\n\r\n  return reshapeCart(res.body.data.cartLinesUpdate.cart);\r\n}\r\n\r\nexport async function getCart(cartId: string | undefined): Promise<Cart | undefined> {\r\n  if (!cartId) {\r\n    return undefined;\r\n  }\r\n\r\n  const res = await shopifyFetch<ShopifyCartOperation>({\r\n    query: getCartQuery,\r\n    variables: { cartId },\r\n    tags: [TAGS.cart]\r\n  });\r\n\r\n  // Old carts becomes `null` when you checkout.\r\n  if (!res.body.data.cart) {\r\n    return undefined;\r\n  }\r\n\r\n  return reshapeCart(res.body.data.cart);\r\n}\r\n\r\nexport async function getCollection(handle: string): Promise<Collection | undefined> {\r\n  const res = await shopifyFetch<ShopifyCollectionOperation>({\r\n    query: getCollectionQuery,\r\n    tags: [TAGS.collections],\r\n    variables: {\r\n      handle\r\n    }\r\n  });\r\n\r\n  return reshapeCollection(res.body.data.collection);\r\n}\r\n\r\nexport async function getCollectionProducts({\r\n  collection,\r\n  reverse,\r\n  sortKey\r\n}: {\r\n  collection: string;\r\n  reverse?: boolean;\r\n  sortKey?: string;\r\n}): Promise<Product[]> {\r\n  const res = await shopifyFetch<ShopifyCollectionProductsOperation>({\r\n    query: getCollectionProductsQuery,\r\n    tags: [TAGS.collections, TAGS.products],\r\n    variables: {\r\n      handle: collection,\r\n      reverse,\r\n      sortKey: sortKey === 'CREATED_AT' ? 'CREATED' : sortKey\r\n    }\r\n  });\r\n\r\n  if (!res.body.data.collection) {\r\n    console.log(`No collection found for \\`${collection}\\``);\r\n    return [];\r\n  }\r\n\r\n  return reshapeProducts(removeEdgesAndNodes(res.body.data.collection.products));\r\n}\r\n\r\nexport async function getCollections(): Promise<Collection[]> {\r\n  const res = await shopifyFetch<ShopifyCollectionsOperation>({\r\n    query: getCollectionsQuery,\r\n    tags: [TAGS.collections]\r\n  });\r\n  const shopifyCollections = removeEdgesAndNodes(res.body?.data?.collections);\r\n  const collections = [\r\n    {\r\n      handle: '',\r\n      title: 'All',\r\n      description: 'All products',\r\n      seo: {\r\n        title: 'All',\r\n        description: 'All products'\r\n      },\r\n      path: '/search',\r\n      updatedAt: new Date().toISOString()\r\n    },\r\n    // Filter out the `hidden` collections.\r\n    // Collections that start with `hidden-*` need to be hidden on the search page.\r\n    ...reshapeCollections(shopifyCollections).filter(\r\n      (collection) => !collection.handle.startsWith('hidden')\r\n    )\r\n  ];\r\n\r\n  return collections;\r\n}\r\n\r\nexport async function getMenu(handle: string): Promise<Menu[]> {\r\n  const res = await shopifyFetch<ShopifyMenuOperation>({\r\n    query: getMenuQuery,\r\n    tags: [TAGS.collections],\r\n    variables: {\r\n      handle\r\n    }\r\n  });\r\n\r\n  return (\r\n    res.body?.data?.menu?.items.map((item: { title: string; url: string }) => ({\r\n      title: item.title,\r\n      path: item.url.replace(domain, '').replace('/collections', '/search').replace('/pages', '')\r\n    })) || []\r\n  );\r\n}\r\n\r\nexport async function getPage(handle: string): Promise<Page> {\r\n  const res = await shopifyFetch<ShopifyPageOperation>({\r\n    query: getPageQuery,\r\n    cache: 'no-store',\r\n    variables: { handle }\r\n  });\r\n\r\n  return res.body.data.pageByHandle;\r\n}\r\n\r\nexport async function getPages(): Promise<Page[]> {\r\n  const res = await shopifyFetch<ShopifyPagesOperation>({\r\n    query: getPagesQuery,\r\n    cache: 'no-store'\r\n  });\r\n\r\n  return removeEdgesAndNodes(res.body.data.pages);\r\n}\r\n\r\nexport async function getProduct(handle: string): Promise<Product | undefined> {\r\n  const res = await shopifyFetch<ShopifyProductOperation>({\r\n    query: getProductQuery,\r\n    tags: [TAGS.products],\r\n    variables: {\r\n      handle\r\n    }\r\n  });\r\n\r\n  return reshapeProduct(res.body.data.product, false);\r\n}\r\n\r\nexport async function getProductRecommendations(productId: string): Promise<Product[]> {\r\n  const res = await shopifyFetch<ShopifyProductRecommendationsOperation>({\r\n    query: getProductRecommendationsQuery,\r\n    tags: [TAGS.products],\r\n    variables: {\r\n      productId\r\n    }\r\n  });\r\n\r\n  return reshapeProducts(res.body.data.productRecommendations);\r\n}\r\n\r\nexport async function getProducts({\r\n  query,\r\n  reverse,\r\n  sortKey\r\n}: {\r\n  query?: string;\r\n  reverse?: boolean;\r\n  sortKey?: string;\r\n}): Promise<Product[]> {\r\n  const res = await shopifyFetch<ShopifyProductsOperation>({\r\n    query: getProductsQuery,\r\n    tags: [TAGS.products],\r\n    variables: {\r\n      query,\r\n      reverse,\r\n      sortKey\r\n    }\r\n  });\r\n\r\n  return reshapeProducts(removeEdgesAndNodes(res.body.data.products));\r\n}\r\n\r\n// This is called from `app/api/revalidate.ts` so providers can control revalidation logic.\r\nexport async function revalidate(req: NextRequest): Promise<NextResponse> {\r\n  // We always need to respond with a 200 status code to Shopify,\r\n  // otherwise it will continue to retry the request.\r\n  const collectionWebhooks = ['collections/create', 'collections/delete', 'collections/update'];\r\n  const productWebhooks = ['products/create', 'products/delete', 'products/update'];\r\n  const topic = (await headers()).get('x-shopify-topic') || 'unknown';\r\n  const secret = req.nextUrl.searchParams.get('secret');\r\n  const isCollectionUpdate = collectionWebhooks.includes(topic);\r\n  const isProductUpdate = productWebhooks.includes(topic);\r\n\r\n  if (!secret || secret !== process.env.SHOPIFY_REVALIDATION_SECRET) {\r\n    console.error('Invalid revalidation secret.');\r\n    return NextResponse.json({ status: 401 });\r\n  }\r\n\r\n  if (!isCollectionUpdate && !isProductUpdate) {\r\n    // We don't need to revalidate anything for any other topics.\r\n    return NextResponse.json({ status: 200 });\r\n  }\r\n\r\n  if (isCollectionUpdate) {\r\n    revalidateTag(TAGS.collections);\r\n  }\r\n\r\n  if (isProductUpdate) {\r\n    revalidateTag(TAGS.products);\r\n  }\r\n\r\n  return NextResponse.json({ status: 200, revalidated: true, now: Date.now() });\r\n}\r\n","module.exports = \"blob:Inter-Bold.1e3e4a3108c86bc3.ttf\""],"names":["runtime","Image","params","page","getPage","title","seo","OpengraphImage","LogoIcon","props","svg","xmlns","aria-label","process","env","SITE_NAME","viewBox","className","clsx","path","d","ImageResponse","div","tw","width","height","fill","p","fonts","name","data","fetch","then","res","arrayBuffer","style","weight","TAGS","collections","object","Array","isArray","isShopifyError","isObject","error","Error","findError","Object","prototype","toString","call","getPrototypeOf","seoFragment","collectionFragment","getCollectionQuery","getPageQuery","pageFragment","SHOPIFY_STORE_DOMAIN","ensureStartsWith","stringToCheck","startsWith","endpoint","domain","SHOPIFY_GRAPHQL_API_ENDPOINT","key","SHOPIFY_STOREFRONT_ACCESS_TOKEN","shopifyFetch","cache","headers","query","tags","variables","result","method","body","JSON","stringify","next","json","errors","status","e","cause","message","removeEdgesAndNodes","array","edges","map","edge","node","reshapeCollection","collection","handle","reshapeImages","images","productTitle","filename","image","url","match","altText","getCollection","pageByHandle"],"sourceRoot":"","ignoreList":[]}